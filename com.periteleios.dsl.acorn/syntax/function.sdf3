module function

imports base
imports core

context-free sorts 
  ThisCall
  FuncImpl
  FuncDef

context-free syntax
    
  FuncImpl.JavaFuncImpl = [impl java [QId]]
  
  FuncImpl.PythonFuncImpl = [impl python [QId]]
  
  Definition.FuncDef  = [
    func [FunId]([Params]) : [Sort] = [FuncImpl]
  ]
  
    
context-free syntax // function

  Exp = ThisCall
  
  ThisCall.ThisCall = [[FunId] ( [{Exp ","}*] )]
      
  SimpleExp.SimpleThisCall = ThisCall
  
  SimpleExp.SimpleCall = [[SimpleExp] . [Id] ( [{Exp ","}*] )]

  
lexical syntax

 VarId = "func" {reject}
 
 
template options
  Id = keyword {reject} 
  keyword -/- [a-zA-Z0-9] 
 
